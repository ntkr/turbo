
==================== FINAL INTERFACE ====================
2019-03-22 00:44:53.141786915 UTC

interface turbo-0.1.0.0-APoE2v71cQ7AOwszdgAyY:Lib 8064
  interface hash: 120bf9f59841505571d26839d65c2e3f
  ABI hash: a13d0138a47786055422122e93a627e2
  export-list hash: 9ad7174517404da0e719d85a42ab8e50
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d59a86fc39dabe8754ebbfb830e37f1e
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.renderTurbo
module dependencies: State
package dependencies: array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      ghc-prim-0.5.3 integer-gmp-1.0.2.0 ncurses-0.2.16 text-1.2.3.1
                      transformers-0.5.6.2
orphans: text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         text-1.2.3.1:Data.Text
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6d87087aea24143d2650f78480d954a3
import  -/  ncurses-0.2.16:UI.NCurses b6ce7038a7a196aaab5d1d7934a51025
import  -/  ncurses-0.2.16:UI.NCurses.Types 5cd05534e04d64ba0fdecd8f050f2026
import  -/  State f227e1c5f8e2e7c608a1c879b375d969
  exports: 554ed3190b8d59b1687e3bb79c5d893e
82caf79ddcb0d7f34483e250f28a1381
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule3 Lib.$trModule1) -}
8ac3a3646606d424a225e39820b6e482
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule2) -}
777272bbb903ad667f11fb1e874ff592
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lib"#) -}
ccc06210ed46b48d22cae5c6b9c7ede7
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lib.$trModule4) -}
ebc813a3befad1207e9fb4eacf3d1195
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("turbo-0.1.0.0-APoE2v71cQ7AOwszdgAyY"#) -}
d8ee76461038212dc69fbea93170220d
  renderTurbo :: [GHC.Base.String] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.renderTurbo1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b63bcf783e72a38e300cbee32b5fcd10
  renderTurbo1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (state :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 UI.NCurses.runCurses1
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case GHC.Prim.readAddrOffAddr#
                           @ GHC.Prim.RealWorld
                           __label "stdscr" (data)
                           0#
                           s of ds2 { (#,#) ipv ipv1 ->
                    case Lib.renderTurbo3
                           state
                           Lib.renderTurbo2
                           (GHC.Ptr.Ptr @ UI.NCurses.Types.Window ipv1)
                             `cast`
                           (Sym (UI.NCurses.Types.N:Window[0]) ; Nth:2
                                                                     (<UI.NCurses.Types.Window>_R
                                                                      ->_R UI.NCurses.Types.N:Curses[0] <()>_N ; GHC.Types.N:IO[0]
                                                                                                                     <()>_R))
                           ipv of ds1 { (#,#) ipv2 ipv3 ->
                    case {__pkg_ccall_GC ncurses-0.2.16 GHC.Prim.Addr#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              GHC.Prim.Int# #)}
                           ipv1
                           ipv2 of wild { (#,#) ds4 ds5 ->
                    case GHC.Integer.Type.eqInteger#
                           (GHC.Integer.Type.smallInteger (GHC.Prim.narrow32Int# ds5))
                           UI.NCurses.Enums.$fEnumColor8 of wild1 {
                      DEFAULT
                      -> case {__pkg_ccall_GC ncurses-0.2.16 GHC.Prim.State#
                                                               GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   GHC.Prim.Int# #)}
                                ds4 of wild2 { (#,#) ds ds7 ->
                         case GHC.Integer.Type.eqInteger#
                                (GHC.Integer.Type.smallInteger (GHC.Prim.narrow32Int# ds7))
                                UI.NCurses.Enums.$fEnumColor8 of wild3 {
                           DEFAULT
                           -> letrec {
                                loop :: GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  <join 1> {- Arity: 1, Strictness: <S,U> -}
                                = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                  case UI.NCurses.$wgetEvent
                                         ipv1
                                         (GHC.Maybe.Nothing @ GHC.Integer.Type.Integer)
                                         s1 of ds8 { (#,#) ipv4 ipv5 ->
                                  case ipv5 of wild4 {
                                    GHC.Maybe.Nothing -> loop ipv4
                                    GHC.Maybe.Just ev'
                                    -> let {
                                         $j :: (# GHC.Prim.State# GHC.Prim.RealWorld, () #) <join 0>
                                         = case ev' of wild5 {
                                             UI.NCurses.EventCharacter a1
                                             -> case a1 of wild6 { GHC.Types.C# x2 ->
                                                case x2 of wild7 {
                                                  DEFAULT -> loop ipv4
                                                  'Q'# -> (# ipv4, GHC.Tuple.() #) } }
                                             UI.NCurses.EventSpecialKey a1 -> loop ipv4
                                             UI.NCurses.EventMouse a1 a2 -> loop ipv4
                                             UI.NCurses.EventResized -> loop ipv4
                                             UI.NCurses.EventUnknown a1 -> loop ipv4 }
                                       } in
                                       case ev' of wild5 {
                                         UI.NCurses.EventCharacter a1
                                         -> case a1 of wild6 { GHC.Types.C# x2 ->
                                            case x2 of wild7 {
                                              DEFAULT -> $j 'q'# -> (# ipv4, GHC.Tuple.() #) } }
                                         UI.NCurses.EventSpecialKey a1 -> $j
                                         UI.NCurses.EventMouse a1 a2 -> $j
                                         UI.NCurses.EventResized -> $j
                                         UI.NCurses.EventUnknown a1 -> $j } } }
                              } in
                              loop ds
                           1# -> UI.NCurses.render2 ds } }
                      1# -> UI.NCurses.updateWindow2 ds4 } } } })
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
0a5402faedb05cc4c3fc0f9cb0768253
  renderTurbo2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b9e04405bcf939d74906686611f3551a
  renderTurbo3 ::
    [GHC.Base.String]
    -> GHC.Integer.Type.Integer
    -> UI.NCurses.Types.Window
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><L,U><L,U><S,U> -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

